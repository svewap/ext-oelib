{
	"name": "oliverklee/oelib",
	"description": "Useful stuff for TYPO3 extension development: helper functions for unit testing, templating and automatic configuration checks.",
	"license": "GPL-2.0-or-later",
	"type": "typo3-cms-extension",
	"keywords": [
		"extension",
		"library",
		"templating"
	],
	"authors": [
		{
			"name": "Oliver Klee",
			"email": "typo3-coding@oliverklee.de",
			"homepage": "https://www.oliverklee.de",
			"role": "developer"
		}
	],
	"homepage": "https://www.oliverklee.de/typo3-services/typo3-extensions/",
	"support": {
		"issues": "https://github.com/oliverklee/ext-oelib/issues",
		"source": "https://github.com/oliverklee/ext-oelib"
	},
	"require": {
		"php": "^8.1 || ^8.2",
		"ext-dom": "*",
		"ext-json": "*",
		"ext-libxml": "*",
		"ext-zip": "*",
		"typo3/cms-core": "^12.4",
		"typo3/cms-extbase": "^12.4",
		"typo3/cms-fluid": "^12.4",
		"typo3/cms-frontend": "^12.4"
	},
	"require-dev": {
		"ergebnis/composer-normalize": "^2.19.0",
		"friendsofphp/php-cs-fixer": "^3.4.0",
		"php-coveralls/php-coveralls": "^2.5.3",
		"phpstan/extension-installer": "^1.3.1",
		"phpstan/phpstan": "^1.10.18",
		"phpstan/phpstan-phpunit": "^1.3.13",
		"phpstan/phpstan-strict-rules": "^1.5.1",
		"phpunit/phpunit": "^8.5.33",
		"saschaegerer/phpstan-typo3": "^1.8.4",
		"sjbr/static-info-tables": "^6.9.6 || ^11.5.2",
		"squizlabs/php_codesniffer": "^3.7.2",
		"typo3/cms-extensionmanager": "^10.4.11 || ^11.5.4",
		"typo3/coding-standards": "~0.6.1",
		"typo3/testing-framework": "^6.16.8"
	},
	"replace": {
		"typo3-ter/oelib": "self.version"
	},
	"suggest": {
		"sjbr/static-info-tables": "for the country, currency and federal state data mappers"
	},
	"prefer-stable": true,
	"autoload": {
		"psr-4": {
			"OliverKlee\\Oelib\\": "Classes/"
		}
	},
	"autoload-dev": {
		"psr-4": {
			"OliverKlee\\Oelib\\Tests\\": "Tests/"
		}
	},
	"config": {
		"allow-plugins": {
			"ergebnis/composer-normalize": true,
			"phpstan/extension-installer": true,
			"typo3/class-alias-loader": true,
			"typo3/cms-composer-installers": true
		},
		"preferred-install": {
			"*": "dist"
		},
		"process-timeout": 1000,
		"sort-packages": true,
		"vendor-dir": ".Build/vendor"
	},
	"extra": {
		"branch-alias": {
			"dev-main": "5.1.x-dev"
		},
		"typo3/cms": {
			"app-dir": ".Build",
			"extension-key": "oelib",
			"web-dir": ".Build/public"
		}
	},
	"scripts": {
		"post-autoload-dump": [
			"@link-extension"
		],
		"ci": [
			"@ci:static",
			"@ci:dynamic"
		],
		"ci:composer:normalize": "@composer normalize --no-check-lock --dry-run",
		"ci:coverage": [
			"@ci:coverage:unit",
			"@ci:coverage:functional"
		],
		"ci:coverage:functional": [
			"@coverage:create-directories",
			"find 'Tests/Functional' -wholename '*Test.php' | parallel --gnu 'echo; echo \"Running functional test suite {}\"; .Build/vendor/bin/phpunit -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/FunctionalTests.xml --whitelist Classes --coverage-php=\".Build/coverage/{}.cov\" {}';"
		],
		"ci:coverage:merge": [
			"@coverage:create-directories",
			"tools/phpcov merge --clover=./build/logs/clover.xml ./.Build/coverage/"
		],
		"ci:coverage:unit": [
			"@coverage:create-directories",
			".Build/vendor/bin/phpunit -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/UnitTests.xml --whitelist Classes --coverage-php=.Build/coverage/unit.cov Tests/Unit"
		],
		"ci:dynamic": [
			"@ci:tests"
		],
		"ci:php:cs-fixer": "php-cs-fixer fix --config .php-cs-fixer.php -v --dry-run --diff",
		"ci:php:lint": "find *.php Classes Configuration Tests -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l",
		"ci:php:rector": ".Build/vendor/bin/rector --dry-run",
		"ci:php:sniff": ".Build/vendor/bin/phpcs Classes Configuration Tests",
		"ci:php:stan": ".Build/vendor/bin/phpstan --no-progress",
		"ci:static": [
			"@ci:composer:normalize",
			"@ci:php:lint",
			"@ci:php:sniff",
			"@ci:php:cs-fixer",
			"@ci:php:stan"
		],
		"ci:tests": [
			"@ci:tests:unit",
			"@ci:tests:functional"
		],
		"ci:tests:functional": "find 'Tests/Functional' -wholename '*Test.php' | parallel --gnu 'echo; echo \"Running functional test suite {}\"; .Build/vendor/bin/phpunit -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/FunctionalTests.xml {}';",
		"ci:tests:unit": ".Build/vendor/bin/phpunit -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/UnitTests.xml Tests/Unit/",
		"coverage:create-directories": "mkdir -p build/logs .Build/coverage",
		"fix": [
			"@fix:composer",
			"@fix:php"
		],
		"fix:composer": "@composer normalize --no-check-lock",
		"fix:php": [
			"@fix:php:cs",
			"@fix:php:sniff"
		],
		"fix:php:cs": "php-cs-fixer fix --config .php-cs-fixer.php",
		"fix:php:sniff": "phpcbf Classes Configuration Tests",
		"link-extension": [
			"@php -r 'is_dir($extFolder=__DIR__.\"/.Build/public/typo3conf/ext/\") || mkdir($extFolder, 0777, true);'",
			"@php -r 'file_exists($extFolder=__DIR__.\"/.Build/public/typo3conf/ext/oelib\") || symlink(__DIR__,$extFolder);'"
		],
		"php:rector": ".Build/vendor/bin/rector",
		"phpstan:baseline": ".Build/vendor/bin/phpstan  --generate-baseline=phpstan-baseline.neon",
		"prepare-release": [
			"rm -rf .Build",
			"rm -rf .github",
			"rm -rf .phive",
			"rm -rf Tests",
			"rm -rf tools",
			"rm .editorconfig",
			"rm .gitattributes",
			"rm .gitignore",
			"rm .php-cs-fixer.php",
			"rm phpcs.xml.dist",
			"rm phpstan-baseline.neon",
			"rm phpstan.neon",
			"rm rector.php"
		]
	},
	"scripts-descriptions": {
		"ci": "Runs all dynamic and static code checks.",
		"ci:composer:normalize": "Checks the composer.json.",
		"ci:coverage": "Generates the code coverage report for unit and functional tests.",
		"ci:coverage:functional": "Generates the code coverage report for functional tests.",
		"ci:coverage:merge": "Merges the code coverage reports for unit and functional tests.",
		"ci:coverage:unit": "Generates the code coverage report for unit tests.",
		"ci:php:rector": "Checks for code for changes by Rector.",
		"ci:php:stan": "Checks the types with PHPStan.",
		"ci:static": "Runs all static code analysis checks for the code.",
		"coverage:create-directories": "Creates the directories needed for recording and merging the code coverage reports.",
		"fix": "Runs all automatic code style fixes.",
		"fix:composer": "Normalizes all composer.json files.",
		"fix:php": "Runs all fixers for the PHP code.",
		"fix:php:cs": "Fixes the code style with PHP-CS-Fixer.",
		"fix:php:sniff": "Fixes the code style with PHP_CodeSniffer.",
		"php:rector": "Updates the code with Rector.",
		"phpstan:baseline": "Updates the PHPStan baseline file to match the code.",
		"prepare-release": "Removes development-only files in preparation of a TER release."
	}
}
